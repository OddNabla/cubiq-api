name: Build and Deploy from GHCR to EC2

on:
  push:
    branches: [ main ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      MONGO_DB: ${{ secrets.MONGO_DB }}
      WA_TOKEN: ${{ secrets.WA_TOKEN }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORE_BUCKET }}
      PRIVATE_SIGNING_KEY: ${{ secrets.PRIVATE_SIGNING_KEY }}
      SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Write environment variables to .env file
      run: |
        echo "MONGO_URI=${MONGO_URI}" > .env
        echo "MONGO_DB=${MONGO_DB}" >> .env
        echo "WA_TOKEN=${WA_TOKEN}" >> .env
        echo "FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}" >> .env
        echo "FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}" >> .env
        echo "PRIVATE_SIGNING_KEY=${PRIVATE_SIGNING_KEY}" >> .env
    - name: write service account json to file
      run: |
        echo ${SERVICE_ACCOUNT_JSON} > service-account.json

    - name: Check service account json
      run: |
        cat service-account.json 

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker image
      run: |
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        GIT_COMMIT=${{ github.sha }}
        docker build -t ghcr.io/$REPO_OWNER/cubiq-api:$GIT_COMMIT .

    - name: Push Docker image
      run: |
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        GIT_COMMIT=${{ github.sha }}
        docker push ghcr.io/$REPO_OWNER/cubiq-api:$GIT_COMMIT
  deploy_to_ec2:
    name: Deploy Docker Image to EC2
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      # Step 1: Checkout the repository (optional, for reference)
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Deploy to EC2
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          PEM_FILE: ${{ secrets.PEM_FILE }}
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          GIT_COMMIT=${{ github.sha }}
          echo "${PEM_FILE}" > ec2-key.pem
          chmod 600 ec2-key.pem
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem $EC2_USER@$EC2_HOST << EOF
            docker stop cubiq-api || true
            docker rm cubiq-api || true
            docker system prune -a -f
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository_owner }}/cubiq-api:$GIT_COMMIT
            docker run -d --name cubiq-api --restart=on-failure -p 8080:8080 ghcr.io/$REPO_OWNER/cubiq-api:$GIT_COMMIT

          EOF