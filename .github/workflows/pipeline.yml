name: Build and Deploy from GHCR to EC2

on:
  push:
    branches: [ main ]

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      MONGO_DB: ${{ secrets.MONGO_DB }}
      WA_TOKEN: ${{ secrets.WA_TOKEN }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORE_BUCKET }}
      PRIVATE_SIGNING_KEY: ${{ secrets.PRIVATE_SIGNING_KEY }}
      SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Write environment variables to .env file
      run: |
        echo "MONGO_URI=${MONGO_URI}" > .env
        echo "MONGO_DB=${MONGO_DB}" >> .env
        echo "WA_TOKEN=${WA_TOKEN}" >> .env
        echo "FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}" >> .env
        echo "FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}" >> .env
        echo "PRIVATE_SIGNING_KEY=${PRIVATE_SIGNING_KEY}" >> .env
    - name: write service account json to file
      run: |
        echo ${SERVICE_ACCOUNT_JSON} > service-account.json

    - name: Pretty-print JSON
      run: |
        jq '.' service-account.json

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker image
      run: |
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        GIT_COMMIT=${{ github.sha }}
        docker build -t ghcr.io/$REPO_OWNER/bloc-api:$GIT_COMMIT .

    - name: Push Docker image
      run: |
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        GIT_COMMIT=${{ github.sha }}
        docker push ghcr.io/$REPO_OWNER/bloc-api:$GIT_COMMIT

    # - name: SSH to EC2 and deploy container
    #   uses: appleboy/ssh-action@v1.0.3
    #   with:
    #     host: ${{ secrets.EC2_HOST }}
    #     username: ${{ secrets.EC2_USER }}
    #     key: ${{ secrets.EC2_KEY }}
    #     script: |
    #       echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
    #       docker pull ${{ env.image }}
    #       docker stop my-go-app || true
    #       docker rm my-go-app || true
    #       docker run -d --name my-go-app -p 80:8080 ${{ env.image }}
